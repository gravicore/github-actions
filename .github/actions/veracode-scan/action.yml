# action.yml
name: "Veracode Scan"
description: "Scan Veracode Artifacts"
inputs:
  appname:
    required: true
    type: string
  stage:
    required: true
    type: string
    default: "stg"
  token:
    required: false
    type: string
    default: ""
  vid:
    required: true
    type: string
  vkey:
    required: true
    type: string
  exclude:
    required: false
    type: string
    default: ""
  include:
    required: false
    type: string
    default: "*"
  criticality:
    required: false
    type: string
    default: "High"
  publish:
    required: false
    type: boolean
    default: true
env:
  DEFAULT_JAVA_VERSION: 18
  DEFAULT_NODE_VERSION: 18
runs:
  using: "composite"
  steps:
    - id: execution
      shell: bash
      run: |
        echo "continue=${{ (github.event.workflow_run && github.event.workflow_run.conclusion == 'success') || (!github.event.workflow_run) }}" >> $GITHUB_OUTPUT
    - if: ${{ steps.execution.outputs.continue == 'true' }}
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.stage == 'stg' && github.event.workflow_run.head_branch || '' }}
    - if: ${{ steps.execution.outputs.continue == 'true' }}
      id: setup
      shell: bash
      run: |
        sudo apt-get update && \
        sudo apt-get install -y zip unzip python3 jq snap && \
        sudo snap install yq
        VERACODE=$(yq eval ".veracode" -o=json .github/setup.yml | jq -c . | sed 's/\\n/\\\\n/g')
        JAVA=$(echo ${VERACODE} | jq '.java != null')
        REACT=$(echo ${VERACODE} | jq '.react != null')
        echo "veracode=${VERACODE}" >> $GITHUB_OUTPUT
        echo "java=${JAVA}" >> $GITHUB_OUTPUT
        echo "react=${REACT}" >> $GITHUB_OUTPUT
    - if: ${{ steps.execution.outputs.continue == 'true' && steps.setup.outputs.java == 'true' }}
      uses: gravicore/github-actions/.github/actions/setup-java@main
      with:
        organization: ${{ github.repository_owner }}
        password: ${{ inputs.token }}
        version: ${{ fromJson(steps.setup.outputs.veracode).java.java-version || env.DEFAULT_JAVA_VERSION }}
    - if: ${{ steps.execution.outputs.continue == 'true' && steps.setup.outputs.react == 'true' }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ fromJson(steps.setup.outputs.veracode).react.node-version || env.DEFAULT_NODE_VERSION }}
    - if: ${{ steps.execution.outputs.continue == 'true' }}
      shell: bash
      run: |
        VERACODE='${{ steps.setup.outputs.veracode }}'
        DIRNAME="${{ github.action_path }}/technology"
        echo ${VERACODE} | jq -r 'to_entries[] | "\(.key) \(.value)"' | while read key value; do
          echo "--> [${key}] package started"
          source ${DIRNAME}/environment.sh "${key}" "${value}"
          ${DIRNAME}/${TECHNOLOGY}/main.sh
          echo "--> [${key}] package created"
        done
        echo "CURRENT_TIME=$(date +"%y%m%d%H%M%S")" >> $GITHUB_ENV
    - if: ${{ steps.execution.outputs.continue == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
    - if: ${{ steps.execution.outputs.continue == 'true' && (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/', '.vscode/') != '') && inputs.publish == 'true' }}
      uses: veracode/veracode-uploadandscan-action@0.2.6
      with:
        appname: ${{ inputs.appname }}
        createsandbox: ${{ inputs.stage == 'prd' && 'false' || 'true' }}
        sandboxname: ${{ inputs.stage == 'stg' && github.event.workflow_run.head_branch || '' }}
        criticality: ${{ inputs.criticality }}
        exclude: ${{ inputs.exclude }}
        filepath: dist/
        include: ${{ inputs.include }}
        version: "RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}"
        vid: ${{ inputs.vid }}
        vkey: ${{ inputs.vkey }}
