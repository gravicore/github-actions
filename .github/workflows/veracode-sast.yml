name: veracode-sast  ### workflow to run veracode scan at stg, or prd
on:
  workflow_call:
    inputs:                   ## inputs if "required" MUST be in caller workflow
      VERACODE_APP:
        required: true
        type: string
      VERACODE_CRITICALITY:   ##High
        required: true
        type: string
      VERACODE_EXCLUDE:       # ''
        required: true
        type: string
      VERACODE_INCLUDE:       # *
        required: true
        type: string
      PYTHON_INCLUDE:         # true/false
        required: false
        type: boolean
      JAVA_INCLUDE:           # true/false
        required: false
        type: boolean
      REACT_ANGULAR_INCLUDE:  # true/false
        required: false
        type: boolean
      MVN_RUN:                # example - mvn clean package -f java
        required: false
        type: string
      DEPLOYMENT_STAGE:       # stg, prd
        required: false
        type: string
      REPOSITORY_NAME:        # cel-borrower
        required: false
        type: string
      JAVA_VERSION:  
        required: false
        type: number
      MKDIR_AND_CP_TO_UPLOAD_DIR:  # mkdir dist && cp java/*/target/*.jar dist
        required: false
        type: string
    secrets:
      VERACODE_API_ID:
        required: true
      VERACODE_API_KEY:
        required: true
env:
  VERACODE_APP: ${{ inputs.VERACODE_APP }}
  MVN_RUN: ${{ inputs.MVN_RUN }}
  DEPLOYMENT_STAGE: ${{ inputs.DEPLOYMENT_STAGE }}
jobs:
  Veracode-SAST-Scan-Python:
    name: SAST Scan Python
    if: ${{ (github.event.workflow_run.conclusion == 'success') && (inputs.PYTHON_INCLUDE == true) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Stg
        if: ${{ ( env.DEPLOYMENT_STAGE == 'stg') }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Checkout Prd
        if: ${{ ( env.DEPLOYMENT_STAGE == 'prd') }}
        uses: actions/checkout@v2
      - name: create folder dist
        run: mkdir dist
      - name: install zip
        run: sudo apt-get install zip
      - name: download veracode zip script
        run: wget https://raw.githubusercontent.com/gravicore/github-actions/main/python-sast.py
      - name: create-python-archive
        shell: bash
        run: |
          python python-sast.py
          ls -a
          mv veracode_static_sast* dist/
      - name: Branch Name Var
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}"  >> $GITHUB_ENV
      - name: Gather time stamp
        run:  echo "CURRENT_TIME=$(date +"%y%m%d%H%M%S")" >> $GITHUB_ENV
      - name: Setup Java
        uses: actions/setup-java@v1 # Make java accessible on path so the uploadandscan action can run.
        with: 
          java-version: '8'
      - uses: veracode/veracode-uploadandscan-action@0.2.4 # Run the uploadandscan action. Inputs are described above.
        if: ${{ (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/') != '') && ( env.DEPLOYMENT_STAGE == 'stg') }}
        with:
          version: 'RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}'
          filepath: 'dist/'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          createsandbox: 'true'
          sandboxname: '${{ github.event.workflow_run.head_branch }}'
          exclude: '${{ inputs.VERACODE_EXCLUDE }}'
          include: '${{ inputs.VERACODE_INCLUDE }}'
          criticality: '${{ inputs.VERACODE_CRITICALITY }}'
          appname: '${{ env.VERACODE_APP }}'
          deleteIncompleteScan: 1
      - uses: veracode/veracode-uploadandscan-action@0.2.4 # Run the uploadandscan action. Inputs are described above.
        if: ${{ (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/') != '') && ( env.DEPLOYMENT_STAGE == 'prd' ) }}
        with:
          version: 'RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}'
          filepath: 'dist/'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          exclude: '${{ inputs.VERACODE_EXCLUDE }}'
          include: '${{ inputs.VERACODE_INCLUDE }}'
          criticality: '${{ inputs.VERACODE_CRITICALITY }}'
          appname: '${{ env.VERACODE_APP }}'
          deleteIncompleteScan: 1
  Veracode-SAST-Scan-Java:    
    name: SAST Scan Java
    if: ${{ (github.event.workflow_run.conclusion == 'success') && (inputs.JAVA_INCLUDE == true) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Stg
        if: ${{ ( env.DEPLOYMENT_STAGE == 'stg') }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Checkout Prd
        if: ${{ ( env.DEPLOYMENT_STAGE == 'prd') }}      
        uses: actions/checkout@v2
      - name: Set up JDK '${{ inputs.JAVA_VERSION }}'
        uses: actions/setup-java@v1
        with:
          java-version: '${{ inputs.JAVA_VERSION }}'
      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: ${{ env.MVN_RUN }}
      - name: Move files to dist folder
        shell: bash
        run: ${{ inputs.MKDIR_AND_CP_TO_UPLOAD_DIR }}
      - name: Gather time stamp
        run:  echo "CURRENT_TIME=$(date +"%y%m%d%H%M%S")" >> $GITHUB_ENV
      - name: Branch Name Var
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}"  >> $GITHUB_ENV
      - uses: veracode/veracode-uploadandscan-action@0.2.4 # Run the uploadandscan action. Inputs are described above.
        if: ${{ (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/') != '') && ( env.DEPLOYMENT_STAGE == 'stg') }}
        with:
          version: 'RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}'
          filepath: 'dist/'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          createsandbox: 'true'
          sandboxname: '${{ github.event.workflow_run.head_branch }}'
          exclude: '${{ inputs.VERACODE_EXCLUDE }}'
          include: '${{ inputs.VERACODE_INCLUDE }}'
          criticality: '${{ inputs.VERACODE_CRITICALITY }}'
          appname: '${{ env.VERACODE_APP }}'
          deleteIncompleteScan: 1
      - uses: veracode/veracode-uploadandscan-action@0.2.4 # Run the uploadandscan action. Inputs are described above.
        if: ${{ (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/') != '') && ( env.DEPLOYMENT_STAGE == 'prd') }}
        with:
          version: 'RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}'
          filepath: 'dist/'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          exclude: '${{ inputs.VERACODE_EXCLUDE }}'
          include: '${{ inputs.VERACODE_INCLUDE }}'
          criticality: '${{ inputs.VERACODE_CRITICALITY }}'
          appname: '${{ env.VERACODE_APP }}'
          deleteIncompleteScan: 1
  Veracode-SAST-Scan-React-Angular:    
    name: SAST Scan React
    if: ${{ (github.event.workflow_run.conclusion == 'success') && (inputs.REACT_ANGULAR_INCLUDE == true) }}
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout Stg
        if: ${{ ( env.DEPLOYMENT_STAGE == 'stg') }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Checkout Prd
        if: ${{ ( env.DEPLOYMENT_STAGE == 'prd') }}
        uses: actions/checkout@v2
      - name: Prepare Artifacts
        shell: bash
        run: zip -r ${{ env.REPOSITORY_NAME }}_${{ env.DEPLOYMENT_STAGE }}_${{ github.run_id }}.zip src '*.asp' '*.css' '*.ehtml' '*.es' '*.es6' '*.handlebars' '*.hbs' '*.hjs' '*.htm' '*.html' '*.js' '*.jsx' '*.json' '*.jsp' '*.map' '*.mustache' '*.php' '*.ts' '*.tsx' '*.vue' '*.xhtml' 'npm-shrinkwrap.json' ' package-lock.json' 'package.json' 'yarn.lock'
      - name: Gather time stamp
        run:  echo "CURRENT_TIME=$(date +"%y%m%d%H%M%S")" >> $GITHUB_ENV
      - name: Branch Name Var
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}"  >> $GITHUB_ENV
      - uses: veracode/veracode-uploadandscan-action@0.2.4 # Run the uploadandscan action. Inputs are described above.
        if: ${{ (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/') != '') && ( env.DEPLOYMENT_STAGE == 'stg') }}
        with:
          version: 'RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}'
          filepath: '${{ env.REPOSITORY_NAME }}_${{ env.DEPLOYMENT_STAGE }}_${{ github.run_id }}.zip'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          createsandbox: 'true'
          sandboxname: '${{ github.event.workflow_run.head_branch }}'
          exclude: '${{ inputs.VERACODE_EXCLUDE }}'
          include: '${{ inputs.VERACODE_INCLUDE }}'
          criticality: '${{ inputs.VERACODE_CRITICALITY }}'
          appname: '${{ env.VERACODE_APP }}'
          deleteIncompleteScan: 1
      - uses: veracode/veracode-uploadandscan-action@0.2.4 # Run the uploadandscan action. Inputs are described above.
        if: ${{ (hashFiles('python/', 'java/', 'react/', 'angular/', 'src/') != '') && ( env.DEPLOYMENT_STAGE == 'prd') }}
        with:
          version: 'RunID:${{ github.run_id }} DateStamp:${{ env.CURRENT_TIME }}'
          filepath: '${{ env.REPOSITORY_NAME }}_${{ env.DEPLOYMENT_STAGE }}_${{ github.run_id }}.zip'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          exclude: '${{ inputs.VERACODE_EXCLUDE }}'
          include: '${{ inputs.VERACODE_INCLUDE }}'
          criticality: '${{ inputs.VERACODE_CRITICALITY }}'
          appname: '${{ env.VERACODE_APP }}'
          deleteIncompleteScan: 1
