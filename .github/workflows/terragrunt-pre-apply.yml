name: "terragrunt-pre-apply"
on:
  workflow_call:
    inputs:                           ## inputs if "required" MUST be in caller workflow
      TF_VAR_stage:                   ## dev, stg, or prd
        required: true
        type: string
      TF_VERSION:
        required: true
        type: string
      TG_VERSION:
        required: true
        type: string
      TF_WORKING_DIR:
        required: true
        type: string            
      TERRAFORM_PRE_APPLY_SUBFOLDERS:
        required: true
        type: string            
      TERRAGRUNT_LOG_LEVEL:
        required: true
        type: string
      ARTIFACTS_INCLUDE:
        required: false
        type: boolean
      ARTIFACTS_NAME:                ## project-artifacts
        required: false
        type: string
      LAMBDA_MOVE_ARTIFACT_SCRIPT:
        required: false
        type: string
      AWS:
        required: false
        type: boolean
      AZURE:
        required: false
        type: boolean      
    secrets:
      DEV_ACCESS_KEY_ID:
        required: false
      DEV_ACCESS_KEY_SECRET:
        required: false
      STG_ACCESS_KEY_ID:
        required: false
      STG_ACCESS_KEY_SECRET:
        required: false
      PRD_ACCESS_KEY_ID:
        required: false
      PRD_ACCESS_KEY_SECRET:
        required: false      
env:
  LAMBDA_MOVE_ARTIFACT_SCRIPT: ${{ inputs.LAMBDA_MOVE_ARTIFACT_SCRIPT }}
  TF_VERSION: ${{ inputs.TF_VERSION }}
  TG_VERSION: ${{ inputs.TG_VERSION }}
  TF_WORKING_DIR: ${{ inputs.TF_WORKING_DIR }}
  TERRAFORM_PRE_APPLY_SUBFOLDERS: ${{ inputs.TERRAFORM_PRE_APPLY_SUBFOLDERS }}
  TERRAGRUNT_LOG_LEVEL: ${{ inputs.TERRAGRUNT_LOG_LEVEL }}
jobs:
  terragrunt-pre-apply:
    name: "Terragrunt Pre Apply"
    env:
      TF_VAR_stage: ${{ inputs.TF_VAR_stage }}
      ACCESS_KEY_ID: ${{ ( secrets.DEV_ACCESS_KEY_ID || secrets.STG_ACCESS_KEY_ID || secrets.PRD_ACCESS_KEY_ID ) }}
      SECRET_ACCESS_KEY: ${{ ( secrets.DEV_ACCESS_KEY_SECRET || secrets.STG_ACCESS_KEY_SECRET || secrets.PRD_ACCESS_KEY_SECRET ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.TF_VERSION }}
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}
      - name: Lint Terraform
        run: terraform fmt -recursive -check
        working-directory: ${{ env.TF_WORKING_DIR }}
      - name: Lint Terragrunt
        run: terragrunt hclfmt --terragrunt-check
        working-directory: ${{ env.TF_WORKING_DIR }}
      - name: Download Project Artifacts
        if: ${{ (inputs.ARTIFACTS_INCLUDE == true) }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.ARTIFACTS_NAME }}
      - name: Move to dist
        if: ${{ (inputs.ARTIFACTS_INCLUDE == true) }}
        run: ${{ env.LAMBDA_MOVE_ARTIFACT_SCRIPT }}
      - name: Pre-validate Apply Steps
        env:
          FILES: ${{env.TERRAFORM_PRE_APPLY_SUBFOLDERS}}
        run: for f in $FILES; do terragrunt apply -auto-approve --terragrunt-working-dir $f --terragrunt-non-interactive --terragrunt-log-level ${{ env.TERRAGRUNT_LOG_LEVEL }}; done
